<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 

                    mc:Ignorable="d"

                    xmlns:helpers="clr-namespace:TwinSovet.Helpers"
                    xmlns:viewModels="clr-namespace:TwinSovet.ViewModels"
                    xmlns:attachViewModels="clr-namespace:TwinSovet.ViewModels.Attachments"
                    xmlns:loc="clr-namespace:TwinSovet.Localization;assembly=TwinSovet.Localization"
                    xmlns:subjects="clr-namespace:TwinSovet.ViewModels.Subjects">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="ButtonBase" x:Key="ImageButtonStyle">
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource AlmostTransparent}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border Name="Bord" Width="{TemplateBinding Width}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Height="{TemplateBinding Height}" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Bord" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TrimmedLinkButtonStyle" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Release"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource LinkForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource AlmostTransparent}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextTrimming="CharacterEllipsis" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               Background="{TemplateBinding Background}" Text="{TemplateBinding Button.Content}"
                               Name="Block" FontSize="{TemplateBinding FontSize}" 
                               Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}"/>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Block" Property="TextDecorations">
                                <Setter.Value>
                                    <TextDecorationCollection>
                                        <TextDecoration Location="Underline">
                                            <TextDecoration.Pen>
                                                <Pen Thickness="1" Brush="{StaticResource LinkForegroundBrush}"/>
                                            </TextDecoration.Pen>
                                        </TextDecoration>
                                    </TextDecorationCollection>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ToolTip">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Content"/>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource GrayBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль кнопки 'Показать заметки' -->
    <Style x:Key="TrimmedNotesButtonsStyle" TargetType="Button" BasedOn="{StaticResource TrimmedLinkButtonStyle}">
        <d:Style.DataContext>
            <x:Type Type="subjects:SubjectEntityViewModelBase"/>
        </d:Style.DataContext>

        <Setter Property="Content" Value="{x:Static loc:Resources.Notes}"/>
        <Setter Property="ToolTip" Value="{x:Static loc:Resources.ToDoShowNotes}"/>
        <Setter Property="CommandParameter" Value="{Binding Mode=OneWay}"/>
        <Setter Property="Command" Value="{x:Static helpers:ClientCommands.CommandShowNotes}"/>
    </Style>

    <!-- Стиль кнопки 'Показать фотографии' -->
    <Style x:Key="TrimmedPhotosButtonsStyle" TargetType="Button" BasedOn="{StaticResource TrimmedLinkButtonStyle}">
        <d:Style.DataContext>
            <x:Type Type="subjects:SubjectEntityViewModelBase"/>
        </d:Style.DataContext>

        <Setter Property="Content" Value="{x:Static loc:Resources.Photos}"/>
        <Setter Property="ToolTip" Value="{x:Static loc:Resources.ToDoShowPhotos}"/>
        <Setter Property="CommandParameter" Value="{Binding Mode=OneWay}"/>
        <Setter Property="Command" Value="{x:Static helpers:ClientCommands.CommandShowPhotos}"/>
    </Style>
    <!--
    <Button Style="{StaticResource TrimmedLinkButtonStyle}" 
                    Content="{x:Static loc:Resources.Indications}" 
                    ToolTip="{x:Static loc:Resources.ViewIndicationsHistory}"
                    Margin="{StaticResource 8LeftMargin}" CommandParameter="{Binding Mode=OneWay}"
                    Command="{x:Static helpers:ClientCommands.CommandShowFlatIndications}"/>
    -->

    <!-- Базовый стиль кнопки 'Показать показания' -->
    <Style x:Key="TrimmedIndicationsButtonsStyle" TargetType="Button" BasedOn="{StaticResource TrimmedLinkButtonStyle}">
        <Setter Property="Content" Value="{x:Static loc:Resources.Indications}"/>
        <Setter Property="ToolTip" Value="{x:Static loc:Resources.ViewIndicationsHistory}"/>
        <Setter Property="CommandParameter" Value="{Binding Mode=OneWay}"/>
    </Style>

    <!-- Стиль кнопки 'Показать показания квартиры' -->
    <Style x:Key="FlatIndicationsButtonsStyle" TargetType="Button" BasedOn="{StaticResource TrimmedIndicationsButtonsStyle}">
        <Setter Property="Command" Value="{x:Static helpers:ClientCommands.CommandShowFlatIndications}"/>
    </Style>

    <!-- Стиль кнопки 'Показать показания этажа' -->
    <Style x:Key="FloorIndicationsButtonsStyle" TargetType="Button" BasedOn="{StaticResource TrimmedIndicationsButtonsStyle}">
        <Setter Property="Command" Value="{x:Static helpers:ClientCommands.CommandShowFloorIndications}"/>
    </Style>

    <Style x:Key="CancelButtonStyle" TargetType="Button" BasedOn="{StaticResource TrimmedLinkButtonStyle}">
        <Setter Property="ToolTip" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource RedBrush}"/>
        <Setter Property="Content" Value="{x:Static loc:Resources.Cancellation}"/>
    </Style>

    <Style x:Key="SaveAttachmentButtonStyle" TargetType="Button" BasedOn="{StaticResource TrimmedLinkButtonStyle}">
        <Setter Property="ToolTip" Value="{x:Null}"/>
        <Setter Property="Content" Value="{x:Static loc:Resources.ToDoSave}"/>

        <Setter Property="CommandParameter" Value="{Binding Mode=OneWay}"/>
        <Setter Property="Command" Value="{x:Static helpers:ClientCommands.CommanSaveAttachment}"/>
    </Style>
</ResourceDictionary>