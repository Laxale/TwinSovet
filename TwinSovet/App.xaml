<Application x:Class="TwinSovet.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 

             xmlns:local="clr-namespace:TwinSovet"
             xmlns:helpers="clr-namespace:TwinSovet.Helpers"
             xmlns:viewModels="clr-namespace:TwinSovet.ViewModels"
             xmlns:views="clr-namespace:TwinSovet.Views"
             xmlns:system="clr-namespace:System;assembly=mscorlib"

             mc:Ignorable="d"
             StartupUri="MainWindow.xaml">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="./XamlResources/Brushes.xaml"/>
                <ResourceDictionary Source="./XamlResources/Margins.xaml"/>
                <ResourceDictionary Source="./XamlResources/Converters.xaml"/>
                <ResourceDictionary Source="./XamlResources/GridStyles.xaml"/>
                <ResourceDictionary Source="./XamlResources/BorderStyles.xaml"/>
                <ResourceDictionary Source="./XamlResources/ButtonStyles.xaml"/>
                <ResourceDictionary Source="./XamlResources/TextBoxStyles.xaml"/>
                <ResourceDictionary Source="./XamlResources/TetxBlockStyles.xaml"/>
                <ResourceDictionary Source="./XamlResources/GeometryResources.xaml"/>

                <ResourceDictionary Source="./XamlResources/InputBindings.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Duration x:Key="SlideAnimDuration">0:0:0.5</Duration>
            <system:Double x:Key="SlidePanelWidth">400</system:Double>

            <KeyBinding x:Key="NewKeyBinding" Key="N" Modifiers="Control" Command="New"/>
            <KeyBinding x:Key="EnterKeyBinding" Key="Enter" Command="helpers:ClientCommands.Enter"/>
            <KeyBinding x:Key="EscapeKeyBinding" Key="Escape" Command="helpers:ClientCommands.Cancel"/>

            <Style x:Key="FlatBorderInListStyle" TargetType="Border" BasedOn="{StaticResource InListBorderStyle}">
                <d:Style.DataContext>
                    <x:Type Type="viewModels:FlatInListDecoratorViewModel"/>
                </d:Style.DataContext>

                <Setter Property="BorderThickness" Value="4, 4, 0, 0"/>
                <Setter Property="Margin" Value="{StaticResource All4Margin}"/>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsHighlighted, Mode=OneWay}" Value="True">
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="2" RenderingBias="Performance" ShadowDepth="6" Color="{StaticResource GreenColor}"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path=IsOrphanHighlighted, Mode=OneWay}" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource RedBrush}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="FlatInListTemplate" DataType="viewModels:FlatViewModel">
                <Border Style="{StaticResource FlatBorderInListStyle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="FlatInListSharedGroup"/>
                        </Grid.ColumnDefinitions>

                        <views:SimpleFlatView Margin="{StaticResource All4Margin}"
                                              EventShowFlatDetails="SimpleFlatView_OnEventShowFlatDetails">

                        </views:SimpleFlatView>
                    </Grid>
                </Border>
            </DataTemplate>

            <Style x:Key="GenderPathIconStyle" TargetType="Path">
                <d:Style.DataContext>
                    <x:Type Type="viewModels:AborigenViewModel"/>
                </d:Style.DataContext>

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Fill" Value="{StaticResource SteelGrayBrush}"/>

                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsMan, Mode=OneWay}" Value="True">
                        <Setter Property="Data" Value="{StaticResource ManUserIconGeometry}"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path=IsWoman, Mode=OneWay}" Value="True">
                        <Setter Property="Data" Value="{StaticResource WomanUserIconGeometry}"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path=IsGenderUndefined, Mode=OneWay}" Value="True">
                        <Setter Property="Data" Value="{StaticResource QuestionIconGeometry}"/>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding Path=IsLibertarian, Mode=OneWay}" Value="True">
                        <Setter Property="Data" Value="{StaticResource LibertarianIconGeometry}"/>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <ScaleTransform ScaleX="0.05" ScaleY="0.05"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="StackPanelInListAlternatedStyle" TargetType="StackPanel">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                                               Path=(ItemsControl.AlternationIndex)}"
                                 Value="0">
                        <Setter Property="Background" Value="{StaticResource LightGrayBrush}"/>
                    </DataTrigger>

                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},
                                                               Path=(ItemsControl.AlternationIndex)}"
                                 Value="1">
                        <Setter Property="Background" Value="{StaticResource AlmostTransparent}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MaskBorderStyle" TargetType="Border">
                <Setter Property="Opacity" Value="0.2"/>
                <Setter Property="Background" Value="{StaticResource SteelGrayBrush}"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>